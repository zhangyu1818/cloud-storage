'use client';

/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/YDuRdVa8jYD
 * Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
 */

/** Add fonts into your Next.js project:

import { Inter } from 'next/font/google'

inter({
  subsets: ['latin'],
  display: 'swap',
})

To read more about using these font, please visit the Next.js documentation:
- App Directory: https://nextjs.org/docs/app/building-your-application/optimizing/fonts
- Pages Directory: https://nextjs.org/docs/pages/building-your-application/optimizing/fonts
**/
import Link from 'next/link';
import { Label } from '@/components/ui/label';
import { Input } from '@/components/ui/input';
import { Checkbox } from '@/components/ui/checkbox';
import { Button } from '@/components/ui/button';
import { useState } from 'react';
import { sleep } from '@/lib/utils';

export function Login() {
  const [loading, setLoading] = useState(false);
  const [showError, setShowError] = useState(false);
  const [email, setEmail] = useState('');
  const [pwd, setPwd] = useState('');

  return (
    <div className='flex min-h-[100dvh] flex-col items-center justify-center bg-background px-4 py-12 sm:px-6 lg:px-8'>
      <div className='w-full max-w-md space-y-8'>
        <div>
          <div className='flex justify-center'>
            <svg
              className='h-12 w-12 text-primary'
              xmlns='http://www.w3.org/2000/svg'
              width='24'
              height='24'
              viewBox='0 0 24 24'
              fill='none'
              stroke='currentColor'
              strokeWidth='2'
              strokeLinecap='round'
              strokeLinejoin='round'
            >
              <path d='M17.5 19H9a7 7 0 1 1 6.71-9h1.79a4.5 4.5 0 1 1 0 9Z' />
            </svg>
            <span className='sr-only'>Cloud Storage</span>
          </div>
          <h2 className='mt-6 text-center text-3xl font-bold tracking-tight text-foreground'>
            Cloud Storage
          </h2>
        </div>
        <form className='space-y-6' action='#' method='POST'>
          <div>
            <Label htmlFor='email' className='sr-only'>
              Email address
            </Label>
            <Input
              id='email'
              name='email'
              type='email'
              value={email}
              onChange={e => setEmail(e.target.value)}
              required
              placeholder='Email address'
              className='relative block w-full appearance-none rounded-md border border-gray-300 px-3 py-2 text-foreground placeholder-muted-foreground focus:z-10 focus:border-primary focus:outline-none focus:ring-primary sm:text-sm'
            />
          </div>
          <div>
            <Label htmlFor='password' className='sr-only'>
              Password
            </Label>
            <Input
              id='password'
              name='password'
              type='password'
              required
              value={pwd}
              onChange={e => setPwd(e.target.value)}
              placeholder='Password'
              className='relative block w-full appearance-none rounded-md border border-gray-300 px-3 py-2 text-foreground placeholder-muted-foreground focus:z-10 focus:border-primary focus:outline-none focus:ring-primary sm:text-sm'
            />
          </div>
          {showError && (
            <p className='text-sm text-destructive'>username or password is not correct.</p>
          )}
          <div className='flex items-center justify-between'>
            <div className='flex items-center'>
              <Checkbox
                id='remember-me'
                className='h-4 w-4 rounded text-primary focus:ring-primary'
              />
              <Label htmlFor='remember-me' className='ml-2 block text-sm text-muted-foreground'>
                Remember me
              </Label>
            </div>
            <div className='text-sm'>
              <Link
                href='/forgot-password'
                className='font-medium text-primary hover:text-primary/80'
                prefetch={false}
              >
                Forgot your password?
              </Link>
            </div>
          </div>
          <div>
            <Button
              onClick={async () => {
                setLoading(true);
                await sleep();
                try {
                  await fetch('/api/v1/login', {
                    method: 'POST',
                    body: JSON.stringify({
                      email,
                      pwd,
                    }),
                  });
                } catch {}
                setLoading(false);
                setShowError(true);
              }}
              type='submit'
              disabled={loading || !email || !pwd}
              className='relative flex w-full justify-center rounded-md bg-primary py-2 px-4 text-sm font-medium text-primary-foreground shadow-sm hover:bg-primary/90 focus:outline-none focus:ring-2 focus:ring-primary focus:ring-offset-2'
            >
              Sign in
            </Button>
          </div>
        </form>
      </div>
    </div>
  );
}
